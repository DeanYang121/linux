方法1：
[root@oldboy /]# echo stu{01..10}|tr " " "\n"|sed -r 's#(.*)#useradd \1 ; pass=$((RANDOM+10000000)); echo "$pass"|passwd --stdin \1; echo -e "\1 \t `echo "$pass"`">>/tmp/oldboy.log#g'|bash
 
上述命令实际就是再拼N条下面的命令的组合，举一条命令stu01用户的过程拆解如下：
useradd stu01 ; 
pass=$((RANDOM+10000000)); 
echo "$pass"|passwd --stdin stu01; 
echo -e "stu01        `echo "$pass"`">>/tmp/oldboy.log
特别说明：如果用shell循环结构会更简单，之所以限制使用循环的目的是锻炼学生的基础命令运用
能力，学到现在还没学到SHELL循环课程呢

方法4：来源 freeandeasy
echo stu{01..10} |tr ' ' '\n'|sed -rn 's@^(.*)$@useradd \1 ; echo $RANDOM|md5sum|cut -c 1-8 >/data/\1;cat /data/\1|passwd --stdin \1@gp'|bash

for i in `seq -w 10`
do
    useradd oldboy${i} &&\
    echo `openssl rand -base64 8`|passwd --stdin oldboy${i} &>/dev/null
done



面试题：umask 002 创建文件  文件的权限是666默认  那么创建出来的文件就是666-002=664  偶数不用加 直接减
对于文件： 666-002 = 664（新创建文件所应具有的访问权限）
对于目录： 777-002 = 775（新创建目录所应具有的访问权限）
一般来说
   root：umask=022
   普通user：umask=002

ls /etc/rc.d/rc3.d
查看启动顺序
iptables ，network，nfs，mysqld，httpd




#!/bin/sh
if [ $# -ne 1]
then
   echo "USAGE:$0 CMD"
   exit 1
fi
for n in 8 9
do
  echo ========10.0.0.$n=========
  ssh oldboy888@10.0.0.$n $1 2>/dev/null 
done


sh view.sh uptime
sh view.sh "free -m"
**************************************************
#!/bin/sh
IP=$(ifconfig eth1|awk -F '[ :]' 'NR==2 {print $4}')
Path="/backup/$IP"
[! -d $Path] && mkdir $Path -p

#backup
tar zcf $Path/www_$(date +%F).tar.gz /var/html/www/ &&\
tar zcf $Path/conf_$(date +%F).tar.gz /var/spool/cron/root /etc/rc.local /etc/sysconfig/iptables /server/scripts &&\
tar zcf $Path/logs_$(date +%F).tar.gz /app/logs/ &&\
find /backup/ -type f -name "*$(date +%F).tar.gz" | xargs md5sum >>$Path/flag_$(date +%F)

#to bac server
rsync -avz /backup/ -type rsync_backup@10.0.0.8::backup --password-file=/etc/rsync.password

#del
find /backup -type f -name "*.tar.gz" -mtime +7|xagrs rm -f
****************************************************************************


定时更新服务器时间：

crontab -e
crontab -l

*/5 * * * * /usr/sbin/ntpdate time.nist.gov >/dev/null 2>&1
#######
00 01 * * * /bin/sh /server/scripts/bak.sh >/dev/null 2>&1


####################################################

#!/bin/sh
./etc/init.d/function
if [ $# -ne 2]
then 
   echo "USAGE:$0 LocalName RemoteDir"
   exit 1
fi
for n in 8 9 10
do
  scp -rp $1 oldboy888@10.0.0.$n:~ &>/dev/null &&\
  ssh -t oldboy888@10.0.0.$n sudo rsync $1 $2 &>/dev/null
  if [ $? -eq 0 ]
  then
    action "$1 to 10.$n is ok" /bin/true
  else
    action "$1 to 10.$n is fail" /bin/false
fi
done
    mail -s "$(date +%F_%T) fenfa hosts" 958672189@qq.com </var/log/fail.log
    >/var/log/ok.log
    >/var/log/fail.log
fi

########################################################
#!/bin/sh
find /backup -type f -name "flag_$(date +%F)" |xagrs md5sum -c |grep FAILED >/opt/mail_body_$(date +%F).txt
mail -s "$(date +%U%T) back" 958672189@qq.com </opt/mail_body_$(date +%F).txt
#########################################################

sh fenfa.sh hosts

#!/bin/sh
. /etc/init.d/functions

if [$# -ne 1]
   then
     echo "USAGE:$0 {FILENAME|DIRNAME}"
     exit 1
fi

for n in 8 9 10
do
  scp -P22 $1 oldgirl@10.0.0.$n:~ &>/dev/null
  if[ $? -eq 0 ]
    then
       action "fenfa $1 ok" /bin/true
  else
       action "fenfa $1 ok" /bin/true
  fi
done

#########################################
nfs 共享目录权限  /date 10.0.0.0/24(rw,sync,all_squash)




/etc/init.d/sendmail start 启动邮件服务



sed -i '/^$/d' /oldboy/test.sh 表示把包含空行的内容删除
awk /^[^$]/ /oldboy/test.sh 表示匹配非空行的开头，过滤出以非空行开头的行，就是过滤出非空行
cat -n nginx.conf
less -N nginx.conf
nl nginx.conf
grep -n . /etc/services 对过滤的内容显示行号，.表示任意单个字符
awk '{print NR,$0}' messages  NR表示行号，$0表示整行内容
sed '=' /etc/rsyslog.conf

history:

type:
    [-tpa] name -t 

echo：

echo $变量 或者 echo ${PATH}

注意：双引号可以保存原有符号特性
反引号也可以

单引号不能识别变量

export：

alias ：

alias lm='ls -al' ：添加别名

unalias lm ：解除别名


grep：

grep [-A] [-B] [--color=auto] '搜寻字符串’ filename


ulimit [-SHacfdltu] [配额]

-H：严格的设定，必定不能超过这个值
-S：警告设定值
-a：列出限定值
-f：用户可以建立的最大档案值
##################################################################
useradd -u -g -G -s -M -e -c -d
userdel -r
usermod -u -g -G -s -M -e -c -d -L -U -I
id
chage -I -E -M -W -m -l

passwd --stdin -n -i -w -x(suid位重点)

su
sudo
visudo
groups
newgrp
w who last lastlog whoami finger





########################2016/10/9日####################################
/var/log/message 系统日志
/var/log/secure  系统安全日志
/var/spool/clientmqueue   邮件临时目录
/proc/interrupts 查看中断文件
/etc/fstab 磁盘文件系统开机自动挂载文件
/etc/profile 全局的环境配置文件

/dev/ 设备目录
/etc/ 系统配置及服务配置文件，启动命令的目录
/proc 显示内核及进程信息的虚拟文件系统
/tmp  临时文件目录，公共厕所
/home 普通用户家目录
/root 超级管理员家目录，皇宫
/var  变化的目录，一般日志文件，cache的目录
/usr 用户程序，数据，帮助文件，二进制命令等的目录
/bin 和 /sbin和/usr/sbin/ 用户命令的目录


tar zcvf /tmp/service_$(date +%F-%H).tar.gz ./service 
ls -l a.log|cut -c 2-10|tr rwx- 4210|awk -F "" '{print $1+$2+$3 $4+$5+$6 $7+$8+$9}'
关机：
shutdown -h now 立刻关机，生产常用
shutdown -h +1 1分钟以后关机
init 0 切换运行级别到0
halt 立即停止系统，需要人工关闭电源 生产常用
halt -p
poweroff 立刻停止系统，并且关闭电源

重启：
reboot 生产常用
shutdown -r now
shutdown -r +1 1分钟之后重启
init 6




parted /dev/sdb mklabel gpt命令
patted /dev/sdb mkpart primary 0 500
mkfs -t ext4 /dev/sdb1 /dev/sdb2
mount /dev/sdb2 /tmp

yum update -y 打补丁

yum install tree（包名） -y

yum grouplist 选包组 接着 yum groupinstall "包组" -y

yum search 关键字 或者 yum search all

yum remove tree -y  不要用

查看网络状态:
ifconfig
ip


route -n
hostname (uname -n)
netstat(ESTABLISHHED 建立连接的状态，数量表示网络连接数)

面试题：已知一个端口333，如何查看端口对应的是什么服务名？lsof -i :333

手动修改系统日期和时间：
date -s 2016/10/9
date -s 11:30
date -s "09/10/16 21:29"
clock -w 写入硬件



useradd 添加用户 -u uid，-g 指定所属组，-s 登录shell，-M不创建用户主目录 -e 指定用户过期时间
usermod 修改用户 -u uid，-g 指定所属组，-s 登录shell，-e指定用户过期时间

chage 查看及修改用户密码相关信息 -l 查看 -E 修改账户过期时间
passwd [username] 修改密码
lsattr 查看特殊属性
chattr 设置特殊属性，+/-参数   a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。
                               i：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。

定时任务：分00-59时00-23日1-31月0-6周 * * * * *  ***.sh   *:表示任一的（分时日月周）时间都执行
                                                          -：表示一个时间范围，如17*19点
                                                          ,:逗号表示分隔时段，如6,0，1表示周六，日，一
                                                          */:表示每隔单位时间，如*/10 每10分钟

inode 文件的入口  block 数据存放的地址

磁盘分区格式化为ext4文件系统后会生成一定数量的inode和block
inode存放文件的属性信息以及作为文件的索引（指向文件的实体BLOCK）
block存放文件的实际内容
inode相同的文件，互为硬链接文件
一个文件被创建后至少要占用一个inode和一个block
如果一个文件很大，可能占多个block（4K）
如果文件很小，也至少要占用一个block，并且剩余空间不可以使用了
inode大小和总量查看：dumpe2fs /dev/sda3|egrep -i "block size|inode size"
查看inode的总量和使用量命令 ：df -i
如何生成指定inode大小 mkfs.ext4 -b 2048 -l 256 /dev/sdb

文件系统小结：
1.文件系统是对一个存储设备上的数据和元数据进行组织的一种机制
2.分区必须格式化创建文件系统才能存放数据
3.一个分区只能有一种文件系统
4.linux下常见文件系统ext2，ext3，ext4，zfs，xfs（Centos7）和Reiserfs（单独安装） windos下常见的文件系统NTFS，FAT32


linux系统优化小节：

1.不用root管理，以普通用户的名义通过sudo授权管理
2.更改默认的远程SSH服务端口，禁止root用户远程连接
3.定时自动更新服务器时间，使其和互联网时间同步
4.配置yum更新源，从国内更新源下载安装软件包
5.关闭selinux以及iptables（工作中有外部IP一般还要打开）
6.调整文件描述符的数量，进程及文件的打开都会消耗文件描述符
7.定时自动清理邮件目录垃圾文件，防止inode节点被占满
8.精简并保留必要的开机自启动服务
9.linux内核参数优化/etc/sysctl.conf ,执行sysctl -p生效
10.更改字符集，使其支持中文，但建议还是用英文字符集
11.锁上关键系统文件（/etc/passwd /etc/shadow /etc/group /etc/inittab）
处理以上内容后把chattr，lsattr 改名为 deanyang
12.清空/etc/issue /etc/issue,net,去除系统及内核版本登录前的信息
13.清除多余的系统虚拟账号
14.为grub菜单加密码

OSI七层模型：物数网传会表应 tcp/ip:应用层，传输层，网络层，数据链路层

/etc/passwd各个字段说明：root :x :0 :0 :root :/root :/bin/bash
                         账号名称 :账号密码 :账号UID :账号组GID :用户说明 :用户家目录 :shell解释器
/etc/shadow中一行的各个字段详细说明：账号名称/账号密码/最近更改密码的时间/禁止修改密码的天数/用户必须更换口令的天数/警告更改密码的期限/不活动时间/失效时间

/etc/skel目录 ：用来存放新用户配置文件的目录，当我们添加新用户时，这个目录下的所有文件会自动被复制到新添加的用户的家目录下：默认情况下，/etc/skel 目录下的所有文件都是隐藏文件；
                通过修改，添加，删除/etc/skel目录下的文件，我们可以为新创建的用户提供统一，标准的，初始化用户环境
/etc/default/useradd:添加用户命令配置


sudo配置文件/etc/sudoers授权规则注意事项总结：
1.授权规则中的所有ALL字符串必须为大写字母
2.禁止的命令尽量放在后面：
ALL:!/usr/sbin/*,!/sbin/*,!/usr/sbin/visudo,!/sbin/fdisk
3.一行内容超长可以用“\”斜线换行
4.！叹号表示非，禁止执行的命令

suid的了解？？？仅对二进制文件有效，二进制命令程序需要可执行x配合， 可以让普通用户可以以root的用户角色运行root账号才能运行的程序和命令，或者程序命令对应本来就没有权限操作的文件
chmod u+s test.sh

如果对应有x，则字符权限表现为小写，否则表现为大写。
设置方法：chmod g+s test
          chmod u+s test
          chmod o+t test
          chmod 7755 test
tmp 经典的粘滞位目录，特点，谁都有写的权限，因此安全成问题。常常是木马第一手跳板
特殊权限对应的数字小结：
suid 4000 权限字符sS，用户位上的x位上的设置。授权方法chmod 4755 a.txt
sgid 2000 权限字符sS，用户组的x位上设置。chmod 2755 a.txt
粘滞位 1000 权限字符tT，其他用户位上设置 chmod 1755 /tmp

通配符：
''  :单引号，所见即所得，不具有变量置换功能
""  :双引号，具有变量置换功能
$   :变量前需要加的符号
;   ：连续不用命令的分隔符
?   :通配符，代表任意1个字符
*   ：代表任意0到多个字符
&&  :当前一个指令执行成功时，执行后一个指令
||  :当前一个指令执行失败时，执行后一个指令
``  :反引号，等价$()
>或1>:重定向
>>   ：追加重定向
<<   ：追加输入重定向
<    ：输入重定向




su - :用户角色切换工具

sudo：提权，权限需要通过visudo（可检查语法）或者编辑/etc/sudoers来实现

问题：希望普通用户能够删除本来无权删除的文件
1.sudo给普通用户授权rm 2.给rm命令设置suid c.设置上级目录的权限

su -
su - root
sudo su - ：表示通过sudo权限进行角色转换，默认切换到root，输入当前执行该命令用户的密码
sudo su - oldboy:切换到oldboy角色，输入当前用户的密码



不能用SATA磁盘来做在线高并发服务的存储或数据库业务，5台SATA盘RAID5，重新买五台SAS，做成RAID10。

在linux中制作文件系统：


选择存储方式小节：
1.Centos默认的文件系统都是比较优秀的
2.xfs，reiserfs需要单独安装。默认不支持的。海量服务器使用多种文件系统维护可能不方便
3.大并发并不是过多的做磁盘优化，而是在架构前端增加缓存，存储数据库的前端增加缓存，这是架构能力



定时打包的注意事项：
1.到目标内容的上级目录打包
2.打包的频率是分，包名必须精确分
3.确保命令行执行正确，然后写到脚本（复制）
4.定时任务命令或程序最好写到脚本执行
5.测试脚本正确性（定时任务怎么写，命令行怎么测试）

磁盘分区的重点：
1.磁盘分区的实质就是针对上述0磁头0磁道1扇区的前446字节后面接下来的64bytes的分区表进行设置，即主要划分起始以及结束磁头号，以及扇区号和挂面号
2.分区工具有fdisk（适合小于2T的磁盘分区），parted（适合大于2T的磁盘分区，可以对小于2T的磁盘分区），fdisk首选，大于2T才选parted
3.一块磁盘的分区表仅有64byte大小，每个分区表要占用16个字节，因此一块磁盘支持4个分区表信息，即主分区+扩展分区不超过4个
4.磁盘分区是按照柱面（cylinder）来划分的
5.扩展分区不能直接使用，需要在扩展分区上面创建逻辑分区
6.扩展分区要有自己的分区表，所以扩展分区下面的逻辑分区可以有多个
1-4分区号，主分区使用，5-逻辑分区

SAS技术是结合了SATA与SCSI两者的优点诞生
企业生产环境主流磁盘的相关信息对比：
企业生产场景普及程度：SAS>SATA>SSD
单位容量对比性能和价格：SSD>SAS>SATA
单位价格购买磁盘容量：SATA>SAS>SSD


crontab定时任务生产应用问题10箴言：
1.crond服务必须开启
2.定时任务要用绝对路径
3.脚本权限问题加/bin/sh
4.时间变量问题用反斜线\%转义，最好用脚本
5.>/dev/null 2>&1 问题（1>/dev/null 2>/dev/null,,,&>/dev/null）不要随意打印输出
tar zcf 
6.定时任务之前加注释
7.使用脚本程序代替命令行定时任务（定时任务执行的脚本要规范路径 /server/scripts）
8.避免不必要的程序及命令输出
9.切到目标目录的上一级，打包目标
10.定时任务脚本中的程序命令尽量用全路径（和环境变量的识别有关）

定时任务那些事：
http://oldboy.blog.51cto.com/2561410/1541515
http://oldboy.blog.51cto.com/2561410/1410555

网络状态优化说明及优化命令细节查看：
http://yangrong.blog.51cto.com/6945369/1321594
http://oldboy.blog.51cto.com/2561410/1336488

OSI七层模型及协议封装解封装详解：
TCP三次握手四次断开原理过程详解


工作中调试定时任务的方法？


权限：
    提示：删除文件（）
    可执行x：1.文件本身要能够执行2.普通用户同时具有读写权限才能3.root只要有r的权限就能执行

目录链接小结：
对于目录，不可以创建硬链接，但可以创建软连接
对于目录的软连接是生产场景运维中常用的技巧
目录的硬链接不能跨越文件系统
每个目录下面都有一个硬链接“.”号，和对应上级目录的硬链接“..”
在父目录里面创建一个子目录，父目录的连接数增加1，子目录里面有..指向父目录
但在父目录里面创建文件，父目录的连接数不会增加



-atime n #意义为n天之前的（一天之内）被access过的档案
-ctime n #...被change过的档案
-mtime n #...被modification过的档案
-newer file # 只要档案比file还要新，就会被列出来

配置默认网关：

第一生效文件：

grep -i gate /etc/sysconfig/network-scripts/ifcfg-eth0

grep -i gate /etc/sysconfig/network

route add default gw 10.0.0.254
route del default gw 10.0.0.254  route(还可以配静态网络路由)

企业级SAS硬盘：15000转/分，主轴转数，多数用300-600G（如果没有特殊业务需求，首选SAS硬盘）
企业级SATA硬盘：7200-10000转/分，常见容量为1T和2T，4T，6T，经济实惠，用作线下不提供服务的数据存储或者并发业务访问不是很大的业务应用。比如站点程序及数据库，图片的线下备份等
企业级SSD固态盘：容量小，价格贵，速度快
线上业务：SAS磁盘
线下业务：SATA磁盘，磁带库
线上高并发，小容量业务：SSD磁盘（磁盘加内存缓存的技术解决大规模并发访问）
根据数据的访问热度，智能分析分层存储：淘宝 80G SSD+500G SATA

SAS/SATA硬盘文件系统选择：
reiserfs 大量小文件业务首选（100K以内）
xfs 有的门户的数据库Mysql服务
ext4 视频，流媒体，数据库，小文件业务也ok，可以默认
ext2 没有日志，CDN网站加速服务，蓝汛的cache业务
服务器数量少选什么都一样，，C5 C6 C7 常规应用就选默认的文件系统即可


date格式：
  date +%F 2015-05-29
  date +%y-%m-%d 15-05-29
  date +%Y-%m-%d 2015-05-29
软连接创建：
   ln -s 源文件 软连接文件
   知识小节：软连接类似windows的快捷方式
             软连接类似一个文本文件，里面存放的是源文件的路径，指向源文件实体
             删除源文件，软连接文件依然存在，但是无法访问指向的源文件路径内容
             失效的时候一般是白字红底闪烁提示
             软连接文件不能提前存在
             软连接和源文件是不同类型的文件，也是不同的文件，inode号也不相同
             删除软连接文件可以用rm命令
硬链接文件创建：
   ln 源文件 硬链接文件
    默认不带参数创建的就是硬链接文件
    源文件和硬链接文件的inode号相同
    ln不能对目录创建硬链接，但可以创建软连接
    删除软连接文件，对源文件和硬链接文件无任何影响
    删除文件的硬链接文件，对源文件和软连接文件无任何影响
    删除链接文件的源文件，对硬链接无影响，会导致软连接失效
    同时删除源文件及其硬链接文件，整个文件才会真正被删除
    很多硬件设备中的快照功能，使用就类似硬链接的原理
    软连接可以跨文件系统，硬链接不可以跨文件系统

生产环境日志审计解决方案：
    记录所有系统及相关用户行为的信息，并且可以自动分析，处理，展示
    1.通过环境变量命令及syslog服务进行全部日志审计(信息太大，不推荐)
    2.sudo配合syslog服务，进行日志审计（信息较少，效果不错）
    3.在bash解释器程序嵌入一个监视器，让所有被审计的系统用户使用修改过的增加了监视器的bash程序作为解释程序
    4.商业产品
安装sudo命令.syslog服务：rpm -qa|egrep "sudo|rsylog"
echo "Defaults     logfile=/var/log/sudo.log">>/etc/sudoers
tail -l /var/log/sudo.log
echo "local2.debug   /var/log/sudo.log">>/etc/rsyslog.conf

日志集中管理：
rsync+inotify 或定时任务+rsync，推送到日志管理服务器上ip_time_sudo.log
rsyslog服务来处理




问题：希望普通用户能够删除本来无权删除的文件
1.sudo给普通用户授权rm 2.给rm命令设置suid c.设置上级目录的权限

如何快速查到ifconfig的全路径，请给出命令：
一般常用的方法有：which，whereis，locate，find

生产环境案例：
如果需求是保留7天的内容时 一般可用周来做。
find /log -type f -name "*.log" -mtime +7|xagrs rm -f

buffer和cache的区别？



mrt 命令
tcpdump -n -i eth0 host ip 命令
使用命令crontab -u user -e命令编辑用户user的cron(c)作业。用户通过编辑文件来增加或修改任何作业请求。 


rsync客户端：
1.创建密码文件

echo "yangdi" >/etc/rsync.password
chmod 600 /etc/rsync.password
ls -l /etc/rsync.password
cat /etc/rsync.password

which rsync
chmod 4755 /usr/bin/rsync


rsync服务器端：
touch /etc/rsyncd.conf
vi rsyncd.conf

写配置文件


1.配置rsync.conf

path=/backup

2.创建rsync用户，及共享的目录/backup
useradd rsync -s /sbin/nologin -M
id rsync

mkdir -p /backup
chown -R rsync.rsync /backup/

3.创建密码文件
echo "rsync_backup:oldboy" >/etc/rsync.password
chmod 600 /etc/rsync.password

4.启动rsync服务：
rsync --deamon
netstat -lntup|grep rsync|ps -ef|grep rsync|grep -v grep

5.加入开机自启动
echo "rsync --daemon" >>/etc/rc.local
cat /etc/rc.local

rsync可以是一个网络服务
rsync命令是客户端命令：
第一种工作模式：local
rsync -avz /etc/hosts /tmp/  ==cp
rsync -avz --delete /null/ /tmp/ ==rm

第二种工作模式：

rsync -avzP -e 'ssh -p 22' /tmp/ root@10.0.0.8:/tmp
rsync -avzP -e 'ssh -p 22' root@10.0.0.8:/tmp /tmp/ 

关键语法说明：
-avz表示同步时文件和目录属性不变。
-P显示同步的过程，可用--progress替换
-e 'ssh -p 22',表示通过ssh的通道传输数据，-p 22可省略
oldboy@10.0.0.141:/opt 远程的主机系统用户，地址，路径
/tmp本地路径

规划三步走：
1.数据同步服务器rsync服务
backup server上部署rsync，并且在web服务器可以推送成功

2.本地打包脚本实现

3.配置定时任务


2.rsync

推拉都是在rsync的客户端上做：

push:

rsync [option...] src... [user@]host::dest

rsync -avz --delete /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password

1.注意斜线问题
服务器端配置：
path = /backup/
客户端命令：
rsync -avz /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password
2.同步安全优化
--address  绑定指定ip地址提供服务
跨机房公网VPN


参数：--delete
rsync -avz /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password

客户端rsync命令排除：
排除单个文件：
rsync -avz --exclude=a /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

排除多个文件：

rsync -avz --exclude={a,b} /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

rsync -avz --exclude=a,--exclude=b /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

rsync -avz --exclude-from=paichu.log /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password


rsync服务端排错思路：
查看rsync服务配置文件路径是否正确，默认路径：/etc/rsyncd.conf
查看配置文件里host allow， host deny，允许ip网段是否是允许访问客户端ip网段
查看配置文件中path参数里的路径是否存在，权限是否正确（正常应该和配置文件中的UID参数对应的属主和组）
查看rsync服务是否启动
查看iptables防火墙和selinux是否开启允许rsync服务通过，也可考虑关闭
查看服务端rsync配置的密码文件是否为600权限，密码文件格式  用户名：密码，，文件路径和配置文件里的secrect files参数对应
如果是推送数据，要查看下配置rsync.conf文件中用户是否对模块下目录具有可读写的权限


rsync客户端排错思路：
查看客户端rsync配置的密码文件权限是否为600，密码文件格式是否正确，并且和服务端密码一致
用telnet链接rsync服务器ip地址873端口，查看服务是否启动。。telnet 10.0.0141 873

客户端执行命令时：rsync -avzP rsync_backup@10.0.0.141::oldboy/test/ /test --password-file=/etc/rsync.password
此命令的细节记清楚，尤其10.0.0.141：：oldboy/test/ 处的双冒号及随后的oldboy模块名称


启动rsync：
rsync --daemon

ps -ef|grep rsync|grep -v grep

netstat -lntup|grep rsync

lsof -i :873

#####################SSH+RSYNC#########

rsync -avzP -e 'ssh -p 22' /tmp/ root@10.0.0.8:/tmp

scp 为远程拷贝文件或目录的命令

-P 接端口，默认端口22时可以省略-P22
-r递归，表示拷贝目录
-p表示在拷贝前后保持文件或目录属性
-l  limit限制速度
scp -P -r oldboy@10.0.0.150:/tmp /tmp/oldboy .把远端目录抓到本地
scp -P -r /tmp/oldboy oldboy@10.0.0.10:/tmp 。 把/tmp/oldboy 拷贝到远端服务器
注意拷贝权限为链接的用户对应权限
scp -P22 hosts oldgirl@10.0.0.8:~
scp -P22 hosts oldgirl@10.0.0.9:~
scp -P22 hosts oldgirl@10.0.0.10:~

 

############################################

更改ssh默认登录端口：
更改前先备份：cp /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
vi /etc/ssh/sshd_config 

Port 52113
PermitRootLogin no
禁止空密码登录
UseDNS no   不使用DNS
GSSAPIauthentication no http://oldboy.blog.51cto.com/2561410/1300964

ssh基本语法：

ssh -p22 oldboy@10.0.0.7 [命令]

ssh -p22 root@10.0.0.10 /sbin/ifconfig eth0

ssh服务端主要包含两个功能SSH远程连接，SFTP服务

Linux SSH 客户端包含ssh远程连接命令，以及远程拷贝scp命令等

章节重点小结：
1.ssh为加密的远程连接协议。相关软件有openssh openssl
2.默认端口22
3.1.x和2.x，2.x更安全
4.服务端ssh远程连接服务，sftp服务。sshd守护进程，开机要自启动
5.ssh客户端包含ssh，scp，sftp命令
6.ssh安全验证方式：口令和密钥，这两种都是基于口令的，ssh密钥登录原理
7.ssh服务安全优化，修改默认端口22，禁止root远程连接，禁止dns，ssh只监听内网ip
8.ssh密钥对，公钥在服务器端，比喻锁头，密钥在客户端，比喻就是钥匙

echo 'oldgirl ALL=(ALL) NOPASSWD:/usr/bin/rsync' >>/etc/sudoers


ssh第一次连接的时候，本地会产生一个密钥文件~/.ssh/known_hosts
ssh排错思路：
连接被拒绝：1.可能为防火墙，2.可能是对应服务器的端口服务没开





##################################################
inotify是rsync客户端安装和执行的

查看当前系统是否支持inotify：
uname -r
ls -l /proc/sys/fs/inotify
显示三个文件则表示支持
max_user_watches:设置inotifywait或inotifywatch命令可以监视的文件数量（单进程）
max_user_instances:设置每个用户可以运行的inotifywait或inotifywatch进程数
max_queued_events:设置inotify实例事件（event）队列可容纳的事件数量

inotify工具集介绍：
一共安装了2个工具（命令），inotifywait和inotifywatch
inotifywait：在被监控的文件或目录上等待特定文件系统事件（open，close，delete等）发生，
执行后处于阻塞状态，适合在shell脚本中使用
inotifywatch：手机被监视的文件系统使用度统计数据，指文件系统事件发生的次数统计

进入inotify-tools目录：/usr/local/inotify-tools/bin/inotifywait -
-mrq --timefmt '%d%m%y %H:%M' --format '%T %w%f' -e creat,close_write,delete /data

./bin/inotifywait --help:

-r 递归查询目录
-q 打印很少的信息，仅仅打印监控事件的信息
-m 始终保持事件监听状态
--excludei 排除文件或目录时不区分大小写
--timefmt 指定时间输出的格式
inotify经过测试，每秒200个文件并发，数据同步几乎无延迟（小于1s）

发邮件命令：mail -s "oldboy title" 95872186@qq.com </etc/hosts
mailq


发邮件2种客户端命令：
mail：mail -s "标题" 邮箱地址 <文件

echo "正文"|mail -s "oldboy" 1256489@qq.com

mutt 命令



下载inotify源码包：
cd /home/oldboy/tools/
wget http://githup.com/downloads/rvoicilas/inotify-tools-3.14.tar.gz
ls inotify-tools-3.14.tar.gz

提出：google.com download inotify-tools

编译安装inotify步骤：

ls -l /proc/sys/fs/inotify/
tar zxf inotify-tools-3.14.tar.gz
cd inotify-tools-3.14
./configure --prefix=/usr/local/inotify-tools-3.14
echo $?
cd ../
ln -s /usr/local/inotify-tools-3.14/ /usr/local/inotify-tools
ls -l /usr/local/inotify-tools




高并发数据实时同步方案小结：
1.inotify（sersync） + rsync 文件级别
2.drbd 文件系统级别
3.第三方软件的同步功能：
mysql同步 oracle mongodb
程序双写
业务逻辑解决


企业生产场景批量管理，自动化管理方案：
1.最简单最常用ssh key，功能最强大，一般中小型企业使用
2.sina cfengine/puppet 较早的批量管理工具。现在基本没有企业使用
3.门户级别比较流行的，puppet批量管理工具，复杂，笨重
4.saltstack批量管理工具，简单，功能强大，配置复杂，赶集网
5.http+cron
sshkey--》cfengine-->puppet-->saltstack/ansible

#################################################################
通过修改配置文件可以使用外部SMTP服务器，可以达到不适用sendmail等内部邮件服务而用外部的SMTP服务器发送邮件
目的：
修改/etc/mail.rc最后一行加入
set from=fromUser@domain.com
smtp=smtp.domain.comset smtp-authuser=
username smptp-auth-password=passwordset
smtp-auth=login

举例：set from=12345@qq.com smtp=smtp.qq.com



