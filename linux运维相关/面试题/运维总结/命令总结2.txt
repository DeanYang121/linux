mrt 命令
tcpdump -n -i eth0 host ip 命令
使用命令crontab -u user -e命令编辑用户user的cron(c)作业。用户通过编辑文件来增加或修改任何作业请求。 


rsync客户端：
1.创建密码文件

echo "yangdi" >/etc/rsync.password
chmod 600 /etc/rsync.password
ls -l /etc/rsync.password
cat /etc/rsync.password

which rsync
chmod 4755 /usr/bin/rsync


rsync服务器端：
touch /etc/rsyncd.conf
vi rsyncd.conf

写配置文件


1.配置rsync.conf

path=/backup

2.创建rsync用户，及共享的目录/backup
useradd rsync -s /sbin/nologin -M
id rsync

mkdir -p /backup
chown -R rsync.rsync /backup/

3.创建密码文件
echo "rsync_backup:oldboy" >/etc/rsync.password
chmod 600 /etc/rsync.password

4.启动rsync服务：
rsync --deamon
netstat -lntup|grep rsync|ps -ef|grep rsync|grep -v grep

5.加入开机自启动
echo "rsync --daemon" >>/etc/rc.local
cat /etc/rc.local

rsync可以是一个网络服务
rsync命令是客户端命令：
第一种工作模式：local
rsync -avz /etc/hosts /tmp/  ==cp
rsync -avz --delete /null/ /tmp/ ==rm

第二种工作模式：

rsync -avzP -e 'ssh -p 22' /tmp/ root@10.0.0.8:/tmp
rsync -avzP -e 'ssh -p 22' root@10.0.0.8:/tmp /tmp/ 

关键语法说明：
-avz表示同步时文件和目录属性不变。
-P显示同步的过程，可用--progress替换
-e 'ssh -p 22',表示通过ssh的通道传输数据，-p 22可省略
oldboy@10.0.0.141:/opt 远程的主机系统用户，地址，路径
/tmp本地路径

规划三步走：
1.数据同步服务器rsync服务
backup server上部署rsync，并且在web服务器可以推送成功

2.本地打包脚本实现

3.配置定时任务


2.rsync

推拉都是在rsync的客户端上做：

push:

rsync [option...] src... [user@]host::dest

rsync -avz --delete /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password

1.注意斜线问题
服务器端配置：
path = /backup/
客户端命令：
rsync -avz /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password
2.同步安全优化
--address  绑定指定ip地址提供服务
跨机房公网VPN


参数：--delete
rsync -avz /tmp/ rsync_backup@10.0.0.10::backup --password-file=/etc/rsync.password

客户端rsync命令排除：
排除单个文件：
rsync -avz --exclude=a /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

排除多个文件：

rsync -avz --exclude={a,b} /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

rsync -avz --exclude=a,--exclude=b /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password

rsync -avz --exclude-from=paichu.log /data1/ rsync_backup@10.0.0.7::oldboy --password-file=/etc/rsync.password


rsync服务端排错思路：
查看rsync服务配置文件路径是否正确，默认路径：/etc/rsyncd.conf
查看配置文件里host allow， host deny，允许ip网段是否是允许访问客户端ip网段
查看配置文件中path参数里的路径是否存在，权限是否正确（正常应该和配置文件中的UID参数对应的属主和组）
查看rsync服务是否启动
查看iptables防火墙和selinux是否开启允许rsync服务通过，也可考虑关闭
查看服务端rsync配置的密码文件是否为600权限，密码文件格式  用户名：密码，，文件路径和配置文件里的secrect files参数对应
如果是推送数据，要查看下配置rsync.conf文件中用户是否对模块下目录具有可读写的权限


rsync客户端排错思路：
查看客户端rsync配置的密码文件权限是否为600，密码文件格式是否正确，并且和服务端密码一致
用telnet链接rsync服务器ip地址873端口，查看服务是否启动。。telnet 10.0.0141 873

客户端执行命令时：rsync -avzP rsync_backup@10.0.0.141::oldboy/test/ /test --password-file=/etc/rsync.password
此命令的细节记清楚，尤其10.0.0.141：：oldboy/test/ 处的双冒号及随后的oldboy模块名称


启动rsync：
rsync --daemon

ps -ef|grep rsync|grep -v grep

netstat -lntup|grep rsync

lsof -i :873

#####################SSH+RSYNC#########

rsync -avzP -e 'ssh -p 22' /tmp/ root@10.0.0.8:/tmp

scp 为远程拷贝文件或目录的命令

-P 接端口，默认端口22时可以省略-P22
-r递归，表示拷贝目录
-p表示在拷贝前后保持文件或目录属性
-l  limit限制速度
scp -P -r oldboy@10.0.0.150:/tmp /tmp/oldboy .把远端目录抓到本地
scp -P -r /tmp/oldboy oldboy@10.0.0.10:/tmp 。 把/tmp/oldboy 拷贝到远端服务器
注意拷贝权限为链接的用户对应权限
scp -P22 hosts oldgirl@10.0.0.8:~
scp -P22 hosts oldgirl@10.0.0.9:~
scp -P22 hosts oldgirl@10.0.0.10:~

 

############################################

更改ssh默认登录端口：
更改前先备份：cp /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
vi /etc/ssh/sshd_config 

Port 52113
PermitRootLogin no
禁止空密码登录
UseDNS no   不使用DNS
GSSAPIauthentication no http://oldboy.blog.51cto.com/2561410/1300964

ssh基本语法：

ssh -p22 oldboy@10.0.0.7 [命令]

ssh -p22 root@10.0.0.10 /sbin/ifconfig eth0

ssh服务端主要包含两个功能SSH远程连接，SFTP服务

Linux SSH 客户端包含ssh远程连接命令，以及远程拷贝scp命令等

章节重点小结：
1.ssh为加密的远程连接协议。相关软件有openssh openssl
2.默认端口22
3.1.x和2.x，2.x更安全
4.服务端ssh远程连接服务，sftp服务。sshd守护进程，开机要自启动
5.ssh客户端包含ssh，scp，sftp命令
6.ssh安全验证方式：口令和密钥，这两种都是基于口令的，ssh密钥登录原理
7.ssh服务安全优化，修改默认端口22，禁止root远程连接，禁止dns，ssh只监听内网ip
8.ssh密钥对，公钥在服务器端，比喻锁头，密钥在客户端，比喻就是钥匙

echo 'oldgirl ALL=(ALL) NOPASSWD:/usr/bin/rsync' >>/etc/sudoers


ssh第一次连接的时候，本地会产生一个密钥文件~/.ssh/known_hosts
ssh排错思路：
连接被拒绝：1.可能为防火墙，2.可能是对应服务器的端口服务没开





##################################################
inotify是rsync客户端安装和执行的

查看当前系统是否支持inotify：
uname -r
ls -l /proc/sys/fs/inotify
显示三个文件则表示支持
max_user_watches:设置inotifywait或inotifywatch命令可以监视的文件数量（单进程）
max_user_instances:设置每个用户可以运行的inotifywait或inotifywatch进程数
max_queued_events:设置inotify实例事件（event）队列可容纳的事件数量

inotify工具集介绍：
一共安装了2个工具（命令），inotifywait和inotifywatch
inotifywait：在被监控的文件或目录上等待特定文件系统事件（open，close，delete等）发生，
执行后处于阻塞状态，适合在shell脚本中使用
inotifywatch：手机被监视的文件系统使用度统计数据，指文件系统事件发生的次数统计

进入inotify-tools目录：/usr/local/inotify-tools/bin/inotifywait -
-mrq --timefmt '%d%m%y %H:%M' --format '%T %w%f' -e creat,close_write,delete /data

./bin/inotifywait --help:

-r 递归查询目录
-q 打印很少的信息，仅仅打印监控事件的信息
-m 始终保持事件监听状态
--excludei 排除文件或目录时不区分大小写
--timefmt 指定时间输出的格式
inotify经过测试，每秒200个文件并发，数据同步几乎无延迟（小于1s）

发邮件命令：mail -s "oldboy title" 95872186@qq.com </etc/hosts
mailq


发邮件2种客户端命令：
mail：mail -s "标题" 邮箱地址 <文件

echo "正文"|mail -s "oldboy" 1256489@qq.com

mutt 命令



下载inotify源码包：
cd /home/oldboy/tools/
wget http://githup.com/downloads/rvoicilas/inotify-tools-3.14.tar.gz
ls inotify-tools-3.14.tar.gz

提出：google.com download inotify-tools

编译安装inotify步骤：

ls -l /proc/sys/fs/inotify/
tar zxf inotify-tools-3.14.tar.gz
cd inotify-tools-3.14
./configure --prefix=/usr/local/inotify-tools-3.14
echo $?
cd ../
ln -s /usr/local/inotify-tools-3.14/ /usr/local/inotify-tools
ls -l /usr/local/inotify-tools




高并发数据实时同步方案小结：
1.inotify（sersync） + rsync 文件级别
2.drbd 文件系统级别
3.第三方软件的同步功能：
mysql同步 oracle mongodb
程序双写
业务逻辑解决


企业生产场景批量管理，自动化管理方案：
1.最简单最常用ssh key，功能最强大，一般中小型企业使用
2.sina cfengine/puppet 较早的批量管理工具。现在基本没有企业使用
3.门户级别比较流行的，puppet批量管理工具，复杂，笨重
4.saltstack批量管理工具，简单，功能强大，配置复杂，赶集网
5.http+cron
sshkey--》cfengine-->puppet-->saltstack/ansible

#################################################################
通过修改配置文件可以使用外部SMTP服务器，可以达到不适用sendmail等内部邮件服务而用外部的SMTP服务器发送邮件
目的：
修改/etc/mail.rc最后一行加入
set from=fromUser@domain.com
smtp=smtp.domain.comset smtp-authuser=
username smptp-auth-password=passwordset
smtp-auth=login

举例：set from=12345@qq.com smtp=smtp.qq.com
