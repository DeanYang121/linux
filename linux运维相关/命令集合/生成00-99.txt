解答1：本题的知识点为seq的-s和-w

[root@oldboy ~]# seq -s " " -w 99
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
老男孩老师点评：seq的-w是补全数字的宽度，不够的前面加0补。-s是指定分隔符，默认是\n。

[root@oldboy ~]# echo {00..99}
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
弥补的三个小办法：
[oldboy@oldboy ~]$ echo 01 02 03 04 05 06 07 08 09 {10..99}
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 
[oldboy@oldboy ~]$ echo `seq -w 10` {11..99}
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 
[oldboy@oldboy ~]$ printf "%02d " $(echo {00..99})
00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21

老男孩老师点评：有不同的系统及SHELL版本可以补全前10前的0，但是，这里的Centos5.8无法加0

解答4：本题的知识点是seq -f的用法
[oldboy@oldboy ~]$ seq  -s " " -f "%02g" 99
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 

解答5：本题的知识点是xargs的用法

[oldboy@oldboy ~]$ seq -f"%02g" 99 |xargs -n 99
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23

解答6：本题的知识点是for循环打印的用法

[root@oldboy ~]# for i in `seq -w 99`;do echo -n $i" "; done
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 
[root@oldboy ~]# for i in `seq 99`;do printf "%02d " $i;done
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 
[root@oldboy ~]# for ((i=0;i<100;i++));do printf "%02d " $i;done
00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 

解答7：本题的知识点是awk的用法

[oldboy@oldboy ~]$  seq 99 |awk '{if(NR<10)printf '0' $0" ";else printf $1" "}'
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 
[root@oldboy ~]# seq 99 |awk '{if(NR<10)print '0' $0;else print $0}'|xargs -n 100
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28

解答8：本题的知识点是eval和双大括号组合的用法
1
2
[root@oldboy ~]# eval echo {`seq -s , 0 9`}{`seq -s , 0 9`}
00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22
提示：以上命令相当于echo {0,1,2,3,4,5,6,7,8,9}{0,1,2,3,4,5,6,7,8,9}


解答10：本题的知识点是awk中双重循环的用法

[root@oldboy ~]# awk 'BEGIN{for(i=0;i<=9;i++) {for(j=0;j<=9;j++)printf i j" " }}'
00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 

解答11：本题的知识点是sed用法

[oldboy@oldboy ~]$  seq 99|sed 's/\(^[0-9]\)$/0\1/g'|tr "\n" " "
01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 

